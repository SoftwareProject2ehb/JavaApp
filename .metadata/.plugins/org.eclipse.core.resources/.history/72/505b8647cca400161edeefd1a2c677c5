package data_control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import model.*;
import model.User.Role;

public class SubscriptionDAO extends BaseDAO{
	
	public void addAbo(Subscription abo) {
		PreparedStatement ps = null;

		String sql = "INSERT INTO Abonnement VALUES (?,?,?,?,?,?,?,?)";

		try {

			if (conn.isClosed()) {
				throw new IllegalStateException("error unexpected");
			}
			ps = conn.prepareStatement(sql);

			ps.setInt(1, abo.getId());
			ps.setString(2, abo.getTicketType());
			ps.setDouble(3, abo.getPrice());
			ps.setInt(4, abo.getCustomerId());
			ps.setString(5, abo.getStartStation());
			ps.setString(6, abo.getEndStation());
			
			
			ps.setDate(7, abo.getStartDate());
			ps.setDate(8, abo.getEndDate());

			ps.executeUpdate();
		} catch (SQLException e) {
			System.out.println(e.getMessage());
			;
			throw new RuntimeException(e.getMessage());
		} finally {
			try {
				if (ps != null)
					ps.close();

			} catch (SQLException e) {
				System.out.println(e.getMessage());
				
				throw new RuntimeException(e.getMessage());
			}
		}

	}
	
	public ArrayList<Subscription> getAllAbos() {
		ArrayList<Subscription> lijst = new ArrayList<Subscription>();
		Statement st = null;
		try {
			Connection c = conn;
			if (c == null || c.isClosed()) {
				// afhandelen zoals je zelf wilt
				throw new IllegalStateException("Connection onverwacht beeindigd");
			}
			st = conn.createStatement();
			ResultSet rs = st.executeQuery("SELECT * FROM Abonnement");

			while (rs.next()) {
				Subscription ab = new Subscription(rs.getInt("id"), 
						rs.getString("type"),
						rs.getDouble("price"), 
						rs.getInt("customer"),
						rs.getString("startstation"),
						rs.getString("endstationi"),
						rs.getDate("startdatum"),
						rs.getDate("enddatum"));
				lijst.add(ab);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		return lijst;
	}


}
